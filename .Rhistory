all(ints>0)
x<-2
if(x<3) {y<-10} else {y<-0}
y
for( i in 1:10) {print(i)}
x<-c("a"."b","c","d")
x<-c("a","b","c","d")
seq_along(x)
z<-5
while (z>=3 && z<= 10) {print(z)  z<- z -1 + 2*rbinom(1,1,0.5)}
while (z>=3 && z<= 10) {print(z)  z<- z-1+2*rbinom(1,1,0.5)}
while (z>=3 && z<= 10) {}
x1<-computerEstimate()
x1<-computeEstimate()
add2 <- function(x, y) {
x+y
}
add2(3,5)
above10 <- function(x) {
use <- x>10
x[use]
}
x<-c(1,10,2,1,4,30,50)
above10(x)
airquality
View(add2)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
parent.frame()
data(irs)
data(iris)
?iris
iris <- data(iris)
data(iris)
library(datasets)
data(iris)
i<-data(iris)
print(i)
View(iris)
lapply(iris,mean)
i<-split(iris, iris$Species)
print(i)
lapply(split(iris, iris$Species), mean)
lapply(split(iris,iris$Species), function(x) colMeans(x[,"Sepal.Length"]))
sapply(split(iris,iris$Species), function(x) colMeans(x[,"Sepal.Length"]))
rowMeans(iris)
print(iris[[Species="virginica"]])
print(iris[[Species=="virginica"]])
View(iris)
View(iris)
i<-split(iris, c["virginica","versicolor","setosa"])
i<-split(iris,iris$Species)
lapply(i, function(x) colMeans(x[,"Species"]))
lapply(i, function(x) colMeans(x[,"Species"]))
lapply(i, function(x) colMeans(x[,"Sepal.Length"]))
lapply(i, function(x) colMeans(x[,c("Sepal.Length"]))
lapply(i, function(x) colMeans(x[,c("Sepal.Length")]))
print(i[,"Species"])
print(i[1,"Species"])
print(i[1:10)
print(i[1:10,2)
print(i[1:10,2])
print(iris[1:10,2])
print(iris[1:10,])
print(iris[,Species="virginica"])
print(iris[,Species=="virginica"])
print(i[3])
colMeans(i[3])
lapply(i[3], mean)
lapply(iris, mean)
sapply(iris, mean)
sapply(i[3],mean)
levels <- levels(iris#Species)
)
print(levels)
levels <- levels(iris$Species)
print(levels)
i <- apply(iris, levels, mean)
v<- i[3]
print(v)
colMeans(v)
lapply(v, mean)
lapply(iris, mean)
lapply(v, mean)
lapply(v[1], mean)
sapply(i[3], mean)
sapply(iris, mean)
sapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris[,1:4], mean)
apply(iris[,1:4],2, mean)
data(mtcars)
?mtcars
View(mtcars)
mean(mtcars$mpg, mtcars$cyl)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
by(mtcars, cyl, mean)
by(mtcars, mtcars$cyl, mean)
with(mtcars, tapply(hp, cyl, mean))
i<with(mtcars, tapply(hp, cyl, mean))
i<-with(mtcars, tapply(hp, cyl, mean))
print i
print(i)
i[3]-i[1]
82.63636 + 126.5779
debug(ls)
ls()
mm <- matrix(1:10000;100;100)
mm <- matrix(1:10000,100,100)
print(mm)
solve(mm)
dim(mm)
x <- stats::rnorm(16)
print(x)
dim(x) <- c(4,4)
print(x)
solve(x)
x <- stats::rnorm(1048576)
dim(x) <- c(1024,1024)
solve(x)
source('~/R/prog2/ProgrammingAssignment2/cachematrix.R')
mmc <- makeCacheMatrix(x)
cacheSolve(mmc)
mmcs <- cacheSolve(mmc)
mmc <- makeCacheMatrix(x)
mmcs <- cacheSolve(mmc)
mmcs <- cacheSolve(mmc)
source('~/R/prog2/ProgrammingAssignment2/cachematrix.R')
mmc <- makeCacheMatrix(x)
mmc <- makeCacheMatrix(x)
mmc <- makeCacheMatrix(x)
mmcs <- cacheSolve(mmc)
mmcs <- cacheSolve(mmc)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
sys.date()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
submit()
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.5, 3.6, 7.9, 8.8))
evaluate(sd(), c(1.5, 3.6, 7.9, 8.8))
evaluate(sd, c(1.5, 3.6, 7.9, 8.8))
info()
debug(evaluate)
evaluate(sd, c(1.5, 3.6, 7.9, 8.8))
q
swirl()
set.seed(1)
rnorm(5)
ppois(2,2)
Rprof()
x<- rnorm(100000,4,3)
x<- rnorm(100000000,4,3)
summaryRprof()
set.seed(1)
rpois(5,2)
set.seed(10)
x<-rep(0:1, each=5)
x
?set.locale
?Sys.setlocale
Sys.setlocale(locale='EN/US')
Sys.setlocale(locale='en-US_LP')
hist(hpc$Global_active_power)
## Setting locale to en-US so that date, numeric and time interpretation goes well.
## Sys.setlocale("en-US_LP")
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpcm$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
## Transform the character fields to numeric
hpc$Global_active_power <- as.numeric(hpc$Global_active_power)
hpc$Global_reactive_power <- as.numeric(hpc$Global_reactive_power)
hpc$Voltage <- as.numeric(hpc$Voltage)
hpc$Global_intensity <- as.numeric(hpc$Global_intensity)
hpc$Sub_metering_1 <- as.numeric(hpc$Sub_metering_1)
hpc$Sub_metering_2 <- as.numeric(hpc$Sub_metering_2)
hpc$Sub_metering_3 <- as.numeric(hpc$Sub_metering_3)
hist(hpc$Global_active_power)
setwd("~/R")
## Setting locale to en-US so that date, numeric and time interpretation goes well.
## Sys.setlocale("en-US_LP")
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpcm$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
## Transform the character fields to numeric
hpc$Global_active_power <- as.numeric(hpc$Global_active_power)
hpc$Global_reactive_power <- as.numeric(hpc$Global_reactive_power)
hpc$Voltage <- as.numeric(hpc$Voltage)
hpc$Global_intensity <- as.numeric(hpc$Global_intensity)
hpc$Sub_metering_1 <- as.numeric(hpc$Sub_metering_1)
hpc$Sub_metering_2 <- as.numeric(hpc$Sub_metering_2)
hpc$Sub_metering_3 <- as.numeric(hpc$Sub_metering_3)
hist(hpc$Global_active_power)
## Setting locale to en-US so that date, numeric and time interpretation goes well.
## Sys.setlocale("en-US_LP")
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpcm$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
## Transform the character fields to numeric
hpc$Global_active_power <- as.numeric(hpc$Global_active_power)
hpc$Gap <- as.numeric(hpc$Global_reactive_power)
hpc$Voltage <- as.numeric(hpc$Voltage)
hpc$Global_intensity <- as.numeric(hpc$Global_intensity)
hpc$Sub_metering_1 <- as.numeric(hpc$Sub_metering_1)
hpc$Sub_metering_2 <- as.numeric(hpc$Sub_metering_2)
hpc$Sub_metering_3 <- as.numeric(hpc$Sub_metering_3)
hist(hpc$Global_active_power)
View(hpc)
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpcm$Time), format="%d/%m/%Y %H:%M:%S")
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpc$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpc$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
View(hpc)
hpc$Gap <- as.numeric(hpc$Global_reactive_power)
View(hpc)
## read in the raw file
hpc <- read.table("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors=FALSE)
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpc$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
View(hpc)
hpc$Gap <- as.numeric(hpc$Global_reactive_power)
View(hpc)
View(hpc)
## read in the raw file
hpc <- read.table("household_power_consumption.txt",
sep=";",
header=TRUE,
stringsAsFactors=FALSE,
dec=".",
na.strings="?",
colClasses=c("character","character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
View(hpc)
View(hpc)
View(hpc)
View(hpc)
## read in the raw file
hpc <- read.table("household_power_consumption.txt",
sep=";",
header=TRUE,
stringsAsFactors=FALSE,
dec=".",
na.strings="?",
colClasses=c("character","character", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
## combine date and time fields into POSIX format
hpc$DateTime <- as.POSIXct(paste(hpc$Date, hpc$Time), format="%d/%m/%Y %H:%M:%S")
## subset the data to the 2 mentioned days
hpc <- subset(hpc, DateTime >= "2007/02/01 00:00:00" & DateTime <= "2007/02/02 23:59:59")
hist(hpc$Global_active_power)
hist(hpc$Global_active_power, col="red")
title(main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency")
hist(hpc$Global_active_power, col="red")
title(main="Global Active Power", xlab="Global Active Power (kilowatts)", ylab="Frequency")
hist(hpc$Global_active_power,
col="red",
main="Global Active Power",
xlab="Global Active Power (kilowatts",
ylab="Frequency")
setwd("~/R/exdata_plotting1/ExData_Plotting1")
png("plot1.png")
hist(hpc$Global_active_power,
col="red",
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
ylab="Frequency")
dev.off()
png("plot1.png", width=480, height=480, units="px", bg="transparent")
hist(hpc$Global_active_power,
col="red",
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
ylab="Frequency")
dev.off()
with(hpc, plot(Global_active_power, datetime))
with(hpc, plot(Global_active_power, DateTime))
with(hpc, plot(DateTime, Global_active_power))
with(hpc, plot(DateTime, Global_active_power, type='n'))
Sys.setlocale("en_US")
Sys.setlocale(locale="en_US")
Sys.setlocale(locale="en-US")
Sys.setlocale(locale="en-US.UTF-8")
Sys.setlocale("LC_TIME","C")
with(hpc, plot(DateTime, Global_active_power, type='n'))
with(hpc, plot(DateTime, Global_active_power, type='n'))
lines(hpc$DateTime, hpc$Global_active_power)
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
png("plot2.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
#dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend(legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3", col=c("black", "red", "blue")))
#dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3", col=c("black", "red", "blue")))
#dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"))
#dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1))
#dev.off()
png("plot3.png", width=480, height=480, bg="transparent")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1))
dev.off()
#png("plot3.png", width=480, height=480, bg="transparent")
## set 4 plots in window
par(mfrow=c(2,2))
#Plot 1 - top left, Global Active Power over time
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power"))
lines(hpc$DateTime, hpc$Global_active_power)
#Plot 2 - top right, voltage over time
with(hpc, plot(DateTime, Voltage, type='n', xlab="datetime", ylab="Voltage"))
lines(hpc$DateTime, hpc$Voltage)
#Plot 3 - bottom left, submetering
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1), bty='n')
#Plot 4 - bottom right, Global reactive power over time
with(hpc, plot(DateTime, Global_reactive_power, type='n', xlab="datetime", ylab="Global_reactive_power"))
lines(hpc$DateTime, hpc$Global_reactive_power)
#dev.off()
png("plot4.png", width=480, height=480, bg="transparent")
## set 4 plots in window
par(mfrow=c(2,2))
## Plot 1 - top left, Global Active Power over time
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power"))
lines(hpc$DateTime, hpc$Global_active_power)
## Plot 2 - top right, voltage over time
with(hpc, plot(DateTime, Voltage, type='n', xlab="datetime", ylab="Voltage"))
lines(hpc$DateTime, hpc$Voltage)
## Plot 3 - bottom left, submetering
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1), bty='n')
## Plot 4 - bottom right, Global reactive power over time
with(hpc, plot(DateTime, Global_reactive_power, type='n', xlab="datetime", ylab="Global_reactive_power"))
lines(hpc$DateTime, hpc$Global_reactive_power)
dev.off()
png("plot1.png", width=480, height=480, units="px")
hist(hpc$Global_active_power,
col="red",
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
ylab="Frequency")
dev.off()
png("plot2.png", width=480, height=480)
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
dev.off()
png("plot3.png", width=480, height=480)
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1))
dev.off()
png("plot4.png", width=480, height=480)
## set 4 plots in window
par(mfrow=c(2,2))
## Plot 1 - top left, Global Active Power over time
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power"))
lines(hpc$DateTime, hpc$Global_active_power)
## Plot 2 - top right, voltage over time
with(hpc, plot(DateTime, Voltage, type='n', xlab="datetime", ylab="Voltage"))
lines(hpc$DateTime, hpc$Voltage)
## Plot 3 - bottom left, submetering
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1), bty='n')
## Plot 4 - bottom right, Global reactive power over time
with(hpc, plot(DateTime, Global_reactive_power, type='n', xlab="datetime", ylab="Global_reactive_power"))
lines(hpc$DateTime, hpc$Global_reactive_power)
dev.off()
png("plot1.png", width=480, height=480, units="px", bg="white")
hist(hpc$Global_active_power,
col="red",
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
ylab="Frequency")
dev.off()
png("plot2.png", width=480, height=480, bg="white"))
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
dev.off()
png("plot2.png", width=480, height=480, bg="white")
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
dev.off()
png("plot2.png", width=480, height=480, bg="white")
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power (kilowatts)"))
lines(hpc$DateTime, hpc$Global_active_power)
dev.off()
png("plot3.png", width=480, height=480, bg="white"))
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1))
dev.off()
png("plot3.png", width=480, height=480, bg="white")
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1))
dev.off()
png("plot4.png", width=480, height=480, bg="white")
## set 4 plots in window
par(mfrow=c(2,2))
## Plot 1 - top left, Global Active Power over time
with(hpc, plot(DateTime, Global_active_power, type='n', xlab="", ylab="Global Active Power"))
lines(hpc$DateTime, hpc$Global_active_power)
## Plot 2 - top right, voltage over time
with(hpc, plot(DateTime, Voltage, type='n', xlab="datetime", ylab="Voltage"))
lines(hpc$DateTime, hpc$Voltage)
## Plot 3 - bottom left, submetering
with(hpc, plot(DateTime, Sub_metering_1, type='n', xlab="", ylab="Energy sub metering"))
lines(hpc$DateTime, hpc$Sub_metering_1)
lines(hpc$DateTime, hpc$Sub_metering_2, col="red")
lines(hpc$DateTime, hpc$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col=c("black", "red", "blue"), lty=c(1,1,1), bty='n')
## Plot 4 - bottom right, Global reactive power over time
with(hpc, plot(DateTime, Global_reactive_power, type='n', xlab="datetime", ylab="Global_reactive_power"))
lines(hpc$DateTime, hpc$Global_reactive_power)
dev.off()
